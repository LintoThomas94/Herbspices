<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        :root {
            --primary-color: #6a11cb;
            --secondary-color: #2575fc;
            --card-bg: #ffffff;
            --body-bg: #f5f7fa;
            --text-dark: #333;
            --text-light: #666;
            --border-light: #e0e6ed;
            --shadow-subtle: rgba(0, 0, 0, 0.05);
        }

        body {
            background: var(--body-bg);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            color: var(--text-dark);
        }

        /* Main content wrapper */
        .main-content { padding: 8px; margin-left: 220px; }

        /* Header */
        .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px; }
        .page-title { font-size: 26px; font-weight: bold; color: #2c3e50; }

        /* Search */
        .search-container {
          display: flex; align-items: center; background: white;
          border-radius: 30px; padding: 5px 15px;
          box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        }
        .search-input { border: none; outline: none; padding: 8px 12px; font-size: 14px; flex: 1; }
        .search-btn { border: none; background: #3498db; border-radius: 50%; padding: 8px; cursor: pointer; display: flex; justify-content: center; align-items: center; }
        .search-btn:hover { background: #2980b9; }
        .search-btn svg { fill: #ffffff; }

        .card {
            border: none;
            border-radius: 1rem;
            box-shadow: 0 10px 30px var(--shadow-subtle);
            transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .form-label {
            font-weight: 600;
            color: var(--text-light);
            font-size: 0.875rem;
        }

        .form-control {
            border-radius: 0.5rem;
            border: 1px solid var(--border-light);
            padding: 0.75rem 1rem;
        }

        .form-control:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 3px rgba(37, 117, 252, 0.1);
        }

        .btn-gradient {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border: none;
            color: white !important;
            font-weight: 600;
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            box-shadow: 0 4px 15px rgba(106, 17, 203, 0.2);
            transition: all 0.3s ease;
        }

        .btn-gradient:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(106, 17, 203, 0.3);
        }

        .btn-custom {
            border-radius: 0.75rem;
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-sm-custom {
            padding: 0.3rem 0.7rem;
            font-size: 0.8rem;
        }

        .btn-custom:hover {
            transform: translateY(-1px);
        }

        .table th {
            background-color: var(--body-bg);
            color: var(--text-light);
            font-weight: 600;
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 2px solid var(--border-light);
        }

        .table td {
            background-color: var(--card-bg);
            border-bottom: 1px solid var(--border-light);
            padding: 1rem;
            vertical-align: middle;
            color: var(--text-dark);
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

        .table-responsive {
            border-radius: 1rem;
            overflow: hidden;
        }

        .badge {
            font-size: 0.75rem;
            font-weight: 600;
            padding: 0.4em 0.8em;
            border-radius: 20px;
        }

        /* Pagination */
        .custom-pagination .page-link {
            border-radius: 50px !important;
            margin: 0 4px;
            padding: 10px 18px;
            border: none;
            color: var(--secondary-color);
            font-weight: 600;
            background: var(--card-bg);
            box-shadow: 0 3px 6px var(--shadow-subtle);
            transition: all 0.3s ease-in-out;
        }

        .custom-pagination .page-link:hover {
            background: linear-gradient(135deg, var(--secondary-color), #00aaff);
            color: #fff;
            transform: translateY(-3px);
        }

        .custom-pagination .active .page-link {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: #fff;
            font-weight: bold;
            box-shadow: 0 4px 12px rgba(106, 17, 203, 0.4);
        }
    </style>
</head>

<body>
    <%- include("../../views/partials/admin/header") %>
    <main class="main-content">
        <header class="header">
            <h1 class="page-title">Category</h1>
            <div class="search-container">
                <input type="text" class="search-input" placeholder="Search ...">
                <button class="search-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24">
                        <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" />
                    </svg>
                </button>
            </div>
        </header>

        <div class="row g-4">
            <div class="col-md-4">
                <div class="card p-4">
                    <h5 class="mb-4" style="color: var(--primary-color);"><i class="bi bi-plus-circle"></i> Add New Category</h5>
                    <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" name="name" class="form-control" placeholder="Enter category name" required>
                            <div id="name-error" class="error-message text-danger"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea name="description" class="form-control" placeholder="Enter description" rows="3" required></textarea>
                            <div id="description-error" class="error-message text-danger"></div>
                        </div>
                        <button class="btn btn-gradient w-100">Create Category</button>
                    </form>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card p-3">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="m-0" style="color: var(--primary-color);"><i class="bi bi-list-ul"></i> Category List</h5>
                    </div>
                    <div class="table-responsive">
                        <table class="table align-middle">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Offer Price</th>
                                    <th>Offer</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cat.reverse().forEach((category, index) => { %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td><b><%= category.name %></b></td>
                                        <td class="text-truncate" style="max-width: 250px;"><%= category.description %></td>
                                        <td><%= category.categoryOffer ? category.categoryOffer + '%' : '0' %></td>
                                        <td>
                                            <% if (category.categoryOffer === 0) { %>
                                                <button class="btn btn-sm btn-gradient btn-custom btn-sm-custom" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                                            <% } else { %>
                                                <button class="btn btn-sm btn-outline-danger btn-custom btn-sm-custom" onclick="removeOffer('<%= category._id %>')">Remove</button>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if(category.isListed) { %>
                                                <span class="badge rounded-pill bg-success" style="width: 60px">Listed</span>
                                            <% } else { %>
                                                <span class="badge rounded-pill bg-danger" style="width: 60px">Unlisted</span>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if(category.isListed) { %>
                                                <a href="/admin/unlistCategory?id=<%=category._id%>" class="btn btn-danger" style="width: 70px">Unlist</a>
                                            <% } else { %>
                                                <a href="/admin/listCategory?id=<%=category._id%>" class="btn btn-success" style="width: 70px">List</a>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>

                    <div class="mt-4">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center custom-pagination">
                                <% for (let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        /* add a category offer*/
        async function addOffer(categoryId) {
            const { value: offerValue } = await Swal.fire({
                title: 'Add Category Offer',
                input: 'text',
                inputLabel: 'Enter offer percentage (e.g., 10)',
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to enter a value!';
                    }
                    const percent = parseInt(value);
                    if (isNaN(percent) || percent < 1 || percent > 100) {
                        return 'Please enter a valid percentage between 1 and 100.';
                    }
                }
            });

            if (offerValue) {
                try {
                    const response = await fetch('/admin/addCategoryOffer', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ categoryId, offerValue }),
                    });

                    if (response.ok) {
                        Swal.fire('Success!', 'Category offer added successfully!', 'success').then(() => {
                            window.location.reload();
                        });
                    } else {
                        const errorData = await response.json();
                        Swal.fire('Error!', errorData.message || 'Failed to add offer.', 'error');
                    }
                } catch (error) {
                    Swal.fire('Error!', 'An unexpected error occurred.', 'error');
                }
            }
        }

        /* remove a category offer*/
        async function removeOffer(categoryId) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove it!'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/removeCategoryOffer`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ categoryId }),
                    });

                    if (response.ok) {
                        Swal.fire('Removed!', 'Category offer has been removed.', 'success').then(() => {
                            window.location.reload();
                        });
                    } else {
                        const errorData = await response.json();
                        Swal.fire('Error!', errorData.message || 'Failed to remove offer.', 'error');
                    }
                } catch (error) {
                    Swal.fire('Error!', 'An unexpected error occurred.', 'error');
                }
            }
        }
    </script>
</body>