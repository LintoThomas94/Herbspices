<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Email Verification</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

  <style>
    :root {
      --primary-color: #3a7c58;
      --secondary-color: #6c757d;
      --success-color: #28a745;
      --warning-color: #ffc107;
      --danger-color: #dc3545;
    }
    
    body {
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .verification-card {
      background: white;
      border-radius: 16px;
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      width: 100%;
      max-width: 480px;
      transition: transform 0.3s ease;
    }
    
    .verification-card:hover {
      transform: translateY(-5px);
    }
    
    .card-header {
      background: linear-gradient(135deg, var(--primary-color), #2d6145);
      color: white;
      padding: 25px;
      text-align: center;
      border-bottom: none;
    }
    
    .card-title {
      font-weight: 700;
      font-size: 26px;
      margin: 0;
    }
    
    .card-body {
      padding: 35px;
    }
    
    .otp-timer-wrapper {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 25px 0;
      width: 100%;
      position: relative;
    }
    
    .otp-timer {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 90px;
      height: 90px;
      border-radius: 50%;
      background: #f8f9fa;
      font-size: 20px;
      font-weight: bold;
      text-align: center;
      border: 4px solid var(--success-color);
      transition: all 0.3s ease;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .timer-expired {
      border-color: var(--danger-color);
      background-color: #fff5f5;
    }
    
    .timer-status {
      font-size: 12px;
      font-weight: 600;
      margin-top: 5px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .otp-input-container {
      margin-bottom: 25px;
    }
    
    .otp-input {
      text-align: center;
      font-size: 24px;
      font-weight: 600;
      letter-spacing: 8px;
      padding: 15px;
      border: 2px solid #e2e8f0;
      border-radius: 12px;
      transition: all 0.3s ease;
    }
    
    .otp-input:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(58, 124, 88, 0.2);
      transform: scale(1.02);
    }
    
    .btn-verify {
      background: linear-gradient(135deg, var(--primary-color), #2d6145);
      border: none;
      padding: 15px;
      border-radius: 10px;
      font-weight: 600;
      font-size: 18px;
      transition: all 0.3s ease;
      width: 100%;
      box-shadow: 0 5px 15px rgba(58, 124, 88, 0.3);
    }
    
    .btn-verify:hover {
      background: linear-gradient(135deg, #2d6145, var(--primary-color));
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(58, 124, 88, 0.4);
    }
    
    .resend-button {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
      padding: 10px 15px;
      border-radius: 8px;
      border: 2px solid transparent;
      background: transparent;
    }
    
    .resend-button:hover:not(:disabled) {
      background-color: rgba(58, 124, 88, 0.1);
      border-color: var(--primary-color);
    }
    
    .resend-button:disabled {
      color: #adb5bd;
      cursor: not-allowed;
    }
    
    .resend-button:disabled:hover {
      background-color: transparent;
      border-color: transparent;
    }
    
    .alert {
      border-radius: 12px;
      padding: 15px 20px;
      border: none;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }
    
    .login-link {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 600;
      transition: color 0.3s ease;
    }
    
    .login-link:hover {
      color: #2d6145;
      text-decoration: underline;
    }
    
    .instruction-text {
      color: var(--secondary-color);
      text-align: center;
      margin-bottom: 20px;
      font-size: 16px;
    }
    
    .expired-text {
      color: var(--danger-color);
      font-weight: bold;
      animation: pulse 1.5s infinite;
    }
    
    @keyframes pulse {
      0% { opacity: 1; }
      50% { opacity: 0.6; }
      100% { opacity: 1; }
    }
    
    .resend-countdown {
      font-size: 14px;
      color: var(--secondary-color);
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div class="verification-card">
    <div class="card-header">
      <h3 class="card-title"><i class="fas fa-shield-alt me-2"></i>Email Verification</h3>
    </div>
    
    <div class="card-body">
      <p class="instruction-text">We've sent a verification code to your email. Please enter it below.</p>

      <!-- Timer -->
      <div class="otp-timer-wrapper">
        <div id="otpTimer" class="otp-timer">
          <span id="timerText">1:00</span>
          <div id="timerStatus" class="timer-status">Valid</div>
        </div>
      </div>

      <!-- OTP Form -->
      <form id="otpForm">
        <div class="otp-input-container">
          <input type="text" id="otp" name="otp" class="form-control otp-input" required 
                 placeholder="Enter 6-digit OTP" maxlength="6" pattern="[0-9]*" inputmode="numeric">
        </div>
        
        <button type="submit" class="btn btn-verify">
          <i class="fas fa-check-circle me-2"></i>Verify OTP
        </button>
      </form>

      <!-- Resend -->
      <div class="text-center mt-4">
        <button type="button" class="btn resend-button" id="resendBtn" disabled>
          <i class="fas fa-redo-alt me-2"></i>Resend OTP
        </button>
        <div id="resendCountdown" class="resend-countdown"></div>
      </div>

      <!-- Error message from backend -->
      <% if (typeof message !== 'undefined' && message) { %>
        <div class="alert alert-danger mt-4 text-center">
          <i class="fas fa-exclamation-circle me-2"></i><%= message %>
        </div>
      <% } %>
    </div>
    
    <div class="card-footer text-center bg-light py-3">
      <p class="mb-0">Already verified? <a href="/login" class="login-link">Login now</a></p>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    let otpTimerInterval;
    let timer = 60;
    let canResend = false;
    let resendCount = 0;
    const MAX_RESEND_ATTEMPTS = 3;

    function updateTimerColor(percentage) {
      const timerElement = document.getElementById('otpTimer');
      const timerStatus = document.getElementById('timerStatus');
      
      if (percentage > 50) {
        timerElement.style.borderColor = '#28a745';
        timerElement.style.color = '#28a745';
        timerStatus.textContent = 'Valid';
        timerStatus.style.color = '#28a745';
      } else if (percentage > 25) {
        timerElement.style.borderColor = '#ffc107';
        timerElement.style.color = '#ffc107';
        timerStatus.textContent = 'Expiring';
        timerStatus.style.color = '#ffc107';
      } else {
        timerElement.style.borderColor = '#dc3545';
        timerElement.style.color = '#dc3545';
        timerStatus.textContent = 'Urgent';
        timerStatus.style.color = '#dc3545';
      }
    }

    function startOtpTimer() {
      const timerElement = document.getElementById('otpTimer');
      const timerText = document.getElementById('timerText');
      const timerStatus = document.getElementById('timerStatus');
      const resendBtn = document.getElementById('resendBtn');
      const resendCountdown = document.getElementById('resendCountdown');
      
      clearInterval(otpTimerInterval);
      timer = 60;
      canResend = false;
      resendBtn.disabled = true;
      resendCountdown.textContent = `You can resend in ${timer} seconds`;
      
      // Reset timer styles
      timerElement.classList.remove('timer-expired');
      timerText.classList.remove('expired-text');
      timerStatus.textContent = 'Valid';
      timerStatus.style.color = '#28a745';
      
      otpTimerInterval = setInterval(function() {
        const minutes = Math.floor(timer / 60);
        const seconds = timer % 60;
        timerText.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        resendCountdown.textContent = `You can resend in ${timer} seconds`;
        updateTimerColor((timer / 60) * 100);

        if (--timer < 0) {
          clearInterval(otpTimerInterval);
          timerText.textContent = "0:00";
          timerText.classList.add('expired-text');
          timerElement.style.borderColor = '#dc3545';
          timerElement.style.color = '#dc3545';
          timerElement.classList.add('timer-expired');
          timerStatus.textContent = 'EXPIRED';
          timerStatus.style.color = '#dc3545';
          canResend = true;
          resendBtn.disabled = false;
          resendCountdown.textContent = '';
        }
      }, 1000);
    }

    function validateOtpForm(event) {
      event.preventDefault();
      
      const otpInput = document.getElementById("otp").value;
      
      if (otpInput.length !== 6 || !/^\d+$/.test(otpInput)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid OTP',
          text: 'Please enter a valid 6-digit OTP code',
          confirmButtonColor: '#3a7c58'
        });
        return false;
      }

      // Show loading state
      const submitBtn = document.querySelector('.btn-verify');
      const originalText = submitBtn.innerHTML;
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Verifying...';
      submitBtn.disabled = true;

      // AJAX call to verify OTP
      $.ajax({
        type: 'POST',
        url: '/verify-passForgot-otp',
        data: { otp: otpInput },
        success: function(response) {
          if (response.success) {
            Swal.fire({
              icon: 'success',
              title: 'OTP Verified Successfully',
              showConfirmButton: false,
              timer: 1500,
              background: '#fff',
              iconColor: '#3a7c58'
            }).then(() => {
              window.location.href = response.redirectUrl;
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Invalid OTP',
              text: response.message,
              confirmButtonColor: '#3a7c58'
            });
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
          }
        },
        error: function() {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to verify OTP. Please try again.',
            confirmButtonColor: '#3a7c58'
          });
          submitBtn.innerHTML = originalText;
          submitBtn.disabled = false;
        }
      });
      
      return false;
    }

    function resendOtp() {
      if (!canResend) return;
      
      // Check resend attempts
      if (resendCount >= MAX_RESEND_ATTEMPTS) {
        Swal.fire({
          title: 'Limit Exceeded',
          text: 'You have reached the maximum number of resend attempts. Please try again later.',
          icon: 'warning',
          confirmButtonColor: '#3a7c58'
        });
        return;
      }
      
      // Show loading state
      const resendBtn = document.getElementById('resendBtn');
      const originalText = resendBtn.innerHTML;
      resendBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Sending...';
      resendBtn.disabled = true;
      
      // AJAX call to resend OTP - FIXED URL
      $.ajax({
        type: 'POST',
        url: '/resend-forgot-otp', // Fixed URL to match your route
        success: function(response) {
          if (response && response.success) {
            resendCount++;
            Swal.fire({
              title: 'New OTP Sent!',
              text: 'A new verification code has been sent to your email.',
              icon: 'success',
              confirmButtonColor: '#3a7c58'
            });
            startOtpTimer();
          } else {
            // Handle error response
            Swal.fire({
              title: 'Error',
              text: response.message || 'Could not resend OTP. Please try again.',
              icon: 'error',
              confirmButtonColor: '#3a7c58'
            });
            resendBtn.disabled = false;
          }
          resendBtn.innerHTML = originalText;
        },
        error: function(xhr, status, error) {
          Swal.fire({
            title: 'Error',
            text: 'Could not resend OTP. Please try again.',
            icon: 'error',
            confirmButtonColor: '#3a7c58'
          });
          resendBtn.innerHTML = originalText;
          resendBtn.disabled = false;
        }
      });
    }

    // Initialize when page loads
    $(document).ready(function() {
      startOtpTimer();
      
      // Attach event listeners
      $('#otpForm').on('submit', validateOtpForm);
      $('#resendBtn').on('click', resendOtp);
      
      // Only allow numeric input
      $('#otp').on('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');
        if (this.value.length > 6) {
          this.value = this.value.slice(0, 6);
        }
      });
    });
  </script>
</body>
</html>